// Generated by CoffeeScript 1.6.2
var omap;

omap = (function() {
  function omap() {
    var geoself;

    geoself = this;
    geoself.getLocation();
  }

  omap.prototype.getLocation = function() {
    var geoself;

    geoself = this;
    $("#wawa").html("start get Position");
    return navigator.geolocation.getCurrentPosition(function(position) {
      $("#wawa").html("getd Position");
      $("#wawa").html(position.coords.longitude + "+++++" + position.coords.latitude);
      return geoself.setmap(position);
    });
  };

  omap.prototype.setmap = function(p) {
    var geoself, map, point;

    geoself = this;
    console.log(p);
    point = new BMap.Point(p.coords.longitude, p.coords.latitude);
    console.log(point);
    map = new BMap.Map("container");
    map.centerAndZoom(point, 15);
    geoself.setMapOption(map);
    return geoself.setHandler(map);
  };

  omap.prototype.setMapOption = function(map) {
    map.disableDragging();
    map.disableDoubleClickZoom();
    map.addControl(new BMap.NavigationControl);
    return map.addControl(new BMap.GeolocationControl);
  };

  omap.prototype.setHandler = function(map) {
    return map.addEventListener("click", function() {
      return navigator.geolocation.getCurrentPosition(function(position) {
        return $.ajax({
          type: 'POST',
          url: '/getxy',
          data: {
            Y: position.coords.longitude,
            X: position.coords.latitude
          },
          success: function(data) {
            var a, ma, point, _i, _len, _results;

            console.log(data);
            _results = [];
            for (_i = 0, _len = data.length; _i < _len; _i++) {
              a = data[_i];
              point = new BMap.Point(a.position[1], a.position[0]);
              ma = new BMap.Marker(point);
              _results.push(map.addOverlay(ma));
            }
            return _results;
          }
        });
      });
    });
  };

  return omap;

})();
